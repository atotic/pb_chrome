Compiled binaries are too big for git repository, so we are putting them in
github release instead. Current release is at:
https://github.com/atotic/pb_chrome/releases/tag/v30.0.1599.9
https://github.com/atotic/pb_chrome/releases/download/v30.0.1599.9/chromium_linux.tar.gz
https://github.com/atotic/pb_chrome/releases/download/v30.0.1599.9/chromium_mac.tar.gz

Patch submitted to chromium:
https://code.google.com/p/chromium/issues/detail?id=169337

Checkout:

mkdir chromium; cd chromium
gclient config https://src.chromium.org/chrome/releases/30.0.1599.9
svn ls https://src.chromium.org/chrome
gclient sync

On Linux, had to change .gclient-entries for jsoncpp. The old repository has moved

Building:

Mac
cd src
export GYP_GENERATORS=ninja; export GYP_DEFINES=clang=1; ./build/gyp_chromium
ninja -C out/Debug chrome; ninja -C out/Release chrome

ninja -C out/Debug chrome;
ninja -C out/Release chrome # for relase builds
ninja -C out/Debug chrome; ninja -C out/Release chrome

Debugging on OS X:
http://www.chromium.org/developers/debugging-on-os-x
Create a new xcode project Test
Add custom build step to the project (this was tricky to do, and I forgot how)
Run Chromium from command line as
out/Debug/Chromium.app/Contents/MacOS/Chromium --renderer-startup-dialog
Attach to Chromium process, and each subprocess as they show up.

Stock chromium might die because of many asserts. Apply threading.patch to make it run

This patch enables jpg encoding of images:

http://git.chromium.org/gitweb/?p=external/skia.git;a=commitdiff;h=4811286588d4279ad19b01ffc1f96005ad5704a4

Implementing PDF compression in Chrome, should land any day now, I am on cc
https://code.google.com/p/skia/issues/detail?id=194


Chrome hacking:

Getting PID of current process
	base::ProcessHandle current = base::GetCurrentProcessHandle();
	std::stringstream ss;
	ss << current;
Break into debugger
	DCHECK(false);
