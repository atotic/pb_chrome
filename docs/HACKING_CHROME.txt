My code:

Checkout:

mkdir chromium; cd chromium
gclient config https://src.chromium.org/chrome/releases/30.0.1599.0
svn ls https://src.chromium.org/chrome
gclient sync

Building:

cd src
export GYP_GENERATORS=ninja; export GYP_DEFINES=clang=1; ./build/gyp_chromium
ninja -C out/Debug chrome

Debugging on OS X:
http://www.chromium.org/developers/debugging-on-os-x
Create a new xcode project Test
Add custom build step to the project (this was tricky to do, and I forgot how)
Run Chromium from command line as
out/Debug/Chromium.app/Contents/MacOS/Chromium --renderer-startup-dialog
Attach to Chromium process, and each subprocess as they show up.

Stock chromium might die because of many asserts. Following mods make it run:
base/file_util_posix.cc
FilePath MakeAbsoluteFilePath(const FilePath& input) {
-  ThreadRestrictions::AssertIOAllowed();
+//  ThreadRestrictions::AssertIOAllowed();

--- base/threading/platform_thread_posix.cc	(revision 217147)
+++ base/threading/platform_thread_posix.cc	(working copy)
@@ -224,7 +224,7 @@
   // Joining another thread may block the current thread for a long time, since
   // the thread referred to by |thread_handle| may still be running long-lived /
   // blocking tasks.
-  base::ThreadRestrictions::AssertIOAllowed();
+  // base::ThreadRestrictions::AssertIOAllowed();
   pthread_join(thread_handle.handle_, NULL);
	Index: base/threading/thread_restrictions.cc
	===================================================================
	--- base/threading/thread_restrictions.cc	(revision 217147)
	+++ base/threading/thread_restrictions.cc	(working copy)
	@@ -34,6 +34,7 @@

	 // static
	 void ThreadRestrictions::AssertIOAllowed() {
	+  return;
	   if (g_io_disallowed.Get().Get()) {
	     LOG(FATAL) <<
	         "Function marked as IO-only was called from a thread that "
